package org.sunbird.collectioncsv.util

object CollectionTOCConstants {

  val COLLECTION_IMPORT = "importCollection"
  val COLLECTION_EXPORT = "exportCollection"
  val COLLECTION = "collection"
  val COLLECTION_TOC_ALLOWED_MIMETYPE = "application/vnd.ekstep.content-collection"
  val COLLECTION_TOC_ALLOWED_CONTENT_TYPES = "collection.csv.allowedContentTypes"
  val COLLECTION_TOC_MAX_CSV_ROWS = "collection.csv.maxRows"
  val COLLECTION_CREATION_CSV_TOC_HEADERS = "collection.csv.headers.sequence.create"
  val COLLECTION_CSV_IDENTIFIER_HEADER = "collection.csv.headers.folderIdentifier"
  val COLLECTION_UPDATE_CSV_TOC_HEADERS = "collection.csv.headers.sequence.update"
  val COLLECTION_TOC_CREATE_CSV_MANDATORY_FIELDS = "collection.csv.mandatory.create"
  val COLLECTION_TOC_UPDATE_CSV_MANDATORY_FIELDS = "collection.csv.mandatory.update"
  val FOLDER_HIERARCHY_COLUMNS = "collection.csv.headers.hierarchy"
  val COLLECTION_CSV_QR_COLUMNS = "collection.csv.headers.QR"
  val COLLECTION_CSV_LINKED_CONTENT_FIELDS = "collection.csv.headers.linkedContents"
  val COLLECTION_CSV_LINKED_CONTENT_SEQ = "collection.csv.headers.sequence.linkedContents"
  val COMMA_SEPARATOR = ", "
  val X_CHANNEL_ID = "X-Channel-Id"
  val DIALCODE = "dialcode"
  val MAPPED_TOPICS_HEADER = "collection.csv.headers.topics"
  val CSV_COLLECTION_NAME_HEADER = "collection.csv.headers.collectionName"
  val COLLECTION_CSV_FILE_EXTENSION = ".csv"
  val COLLECTION_TYPE_TO_UNIT_TYPE = "collection.csv.contentTypeToUnitType"
  val CHILD_NODES = "childNodes"
  val DEPTH = "depth"
  val LEVEL = "level"
  val COLLECTION_OUTPUT_TOC_HEADERS = "collection.csv.headers.output"
  val CHILDREN = "children"
  val UPDATE = "UPDATE"
  val CREATE = "CREATE"
  val DIAL_CODES = "dialcodes"
  val DIAL_CODE_REQUIRED = "dialcodeRequired"
  val NO = "No"
  val YES = "Yes"
  val QR_CODE_REQUIRED = "QR Code Required?"
  val QR_CODE = "QR Code"
  val KEYWORDS = "keywords"
  val TOPIC = "topic"
  val CONTENT_TYPE = "contentType"
  val IDENTIFIER = "identifier"
  val DESCRIPTION = "description"
  val LIMIT = "limit"
  val NAME = "name"
  val LINKED_CONTENT = "linkedContent"
  val CHANNEL = "channel"
  val CONTENT = "content"
  val FRAMEWORK = "framework"
  val VERSION_KEY = "versionKey"
  val SUNBIRD_TOC_MAX_FIRST_LEVEL_UNITS = "collection.csv.maxFirstLevelUnits"
  val INDEX = "index"
  val RESULT = "result"
  val CONTENT_TYPE_HEADER = "Content-Type"
  val BEARER = "Bearer "
  val MESSAGES = "messages"
  val APPLICATION_JSON = "application/json"
  val REQUEST = "request"
  val SEARCH = "search"
  val FILTERS = "filters"
  val FIELDS = "fields"
  val MIME_TYPE = "mimeType"
  val X_AUTHENTICATED_USER_TOKEN = "x-authenticated-user-token"
  val CATEGORIES = "categories"
  val CODE = "code"
  val TERMS = "terms"
  val TOC_URL = "tocUrl"
  val TTL = "ttl"
  val COLLECTION_UNIT_FIELD_MAX_LENGTH = "collection.csv.maxUnitFieldLength"
  val COLLECTION_DESC_FIELD_MAX_LENGTH = "collection.csv.maxDescFieldLength"

  val LEARNING_SERVICE_BASE_URL = "learning_service.api.base_url"
  val SUNBIRD_AUTHORIZATION = "learning_service.api.auth_key"
  val SUNBIRD_CS_BASE_URL = "sunbird_cs_base_url"

  val FRAMEWORK_READ_API_URL = "framework_read_api_url"
  val SUNBIRD_DIALCODE_SEARCH_API = "sunbird_dialcode_search_api"
  val SUNBIRD_CONTENT_SEARCH_URL = "composite.search.url"
  val UPDATE_HIERARCHY_API = "sunbird_update_hierarchy_api"
  val LINK_DIAL_CODE_API = "sunbird_link_dial_code_api"
}
