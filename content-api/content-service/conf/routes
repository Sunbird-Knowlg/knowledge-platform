# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~
GET		  /health						    controllers.HealthController.health

# Content APIs
POST      /content/v3/create                controllers.v3.ContentController.create
PATCH     /content/v3/update/:identifier    controllers.v3.ContentController.update(identifier:String)
GET       /content/v3/read/:identifier      controllers.v3.ContentController.read(identifier:String, mode:Option[String], fields:Option[String])
POST      /content/v3/upload/url/:identifier     controllers.v3.ContentController.uploadPreSigned(identifier:String, type: Option[String])

# Content APIs - with mock response
POST     /content/v3/flag/:identifier           controllers.v3.ContentController.flag(identifier:String)
POST     /content/v3/bundle                     controllers.v3.ContentController.bundle
POST     /content/v3/flag/accept/:identifier    controllers.v3.ContentController.acceptFlag(identifier:String)
POST     /content/v3/flag/reject/:identifier    controllers.v3.ContentController.rejectFlag(identifier:String)
POST     /content/v3/publish/:identifier        controllers.v3.ContentController.publish(identifier:String)
POST     /content/v3/public/publish/:identifier controllers.v3.ContentController.publish(identifier:String)
POST     /content/v3/review/:identifier         controllers.v3.ContentController.review(identifier:String)
DELETE   /content/v3/discard/:identifier        controllers.v3.ContentController.discard(identifier:String)
DELETE   /content/v3/retire/:identifier         controllers.v3.ContentController.retire(identifier:String)
POST     /content/v3/dialcode/link              controllers.v3.ContentController.linkDialCode
POST     /content/v3/dialcode/reserve/:identifier controllers.v3.ContentController.reserveDialCode(identifier:String)
PATCH    /content/v3/dialcode/release/:identifier controllers.v3.ContentController.releaseDialcodes(identifier:String)
POST     /content/v3/reject/:identifier           controllers.v3.ContentController.rejectContent(identifier:String)
POST     /content/v3/unlisted/publish/:identifier  controllers.v3.ContentController.publishUnlisted(identifier:String)

# Collection APIs
PATCH     /content/v3/hierarchy/add         controllers.v3.ContentController.addHierarchy
DELETE    /content/v3/hierarchy/remove      controllers.v3.ContentController.removeHierarchy
PATCH     /content/v3/hierarchy/update      controllers.v3.ContentController.updateHierarchy
GET       /content/v3/hierarchy/:identifier      controllers.v3.ContentController.getHierarchy(identifier:String, mode:Option[String])
POST      /content/v3/upload/:identifier         controllers.v3.ContentController.upload(identifier:String)
POST      /content/v3/copy/:identifier      controllers.v3.ContentController.copy(identifier:String, mode:Option[String], type:String ?= "deep")

#License APIs
POST    /license/v3/create                      controllers.v3.LicenseController.create
GET     /license/v3/read/:identifier            controllers.v3.LicenseController.read(identifier: String, fields:Option[String])
PATCH   /license/v3/update/:identifier          controllers.v3.LicenseController.update(identifier: String)
DELETE  /license/v3/retire/:identifier          controllers.v3.LicenseController.retire(identifier: String)

#These are routes for Channel
POST     /channel/v3/create                   controllers.v3.ChannelController.create
PATCH     /channel/v3/update/:identifier      controllers.v3.ChannelController.update(identifier: String)
GET       /channel/v3/read/:identifier        controllers.v3.ChannelController.read(identifier: String)
DELETE     /channel/v3/retire/:identifier    controllers.v3.ChannelController.retire(identifier: String)