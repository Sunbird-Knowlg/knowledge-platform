# This is the main configuration file for the application.
# https://www.playframework.com/documentation/latest/ConfigFile
# ~~~~~
# Play uses HOCON as its configuration file format.  HOCON has a number
# of advantages over other config formats, but there are two things that
# can be used when modifying settings.
#
# You can include other configuration files in this main application.conf file:
#include "extra-config.conf"
#
# You can declare variables and substitute for them:
#mykey = ${some.value}
#
# And if an environment variable exists when there is no other substitution, then
# HOCON will fall back to substituting environment variable:
#mykey = ${JAVA_HOME}

## Akka
# https://www.playframework.com/documentation/latest/ScalaAkka#Configuration
# https://www.playframework.com/documentation/latest/JavaAkka#Configuration
# ~~~~~
# Play uses Akka internally and exposes Akka Streams and actors in Websockets and
# other streaming HTTP responses.
akka {
  # "akka.log-config-on-start" is extraordinarly useful because it log the complete
  # configuration at INFO level, including defaults and overrides, so it s worth
  # putting at the very top.
  #
  # Put the following in your conf/logback.xml file:
  #
  # <logger name="akka.actor" level="INFO" />
  #
  # And then uncomment this line to debug the configuration.
  #
  #log-config-on-start = true
  default-dispatcher {
    # This will be used if you have set "executor = "fork-join-executor""
    fork-join-executor {
      # Min number of threads to cap factor-based parallelism number to
      parallelism-min = 8

      # The parallelism factor is used to determine thread pool size using the
      # following formula: ceil(available processors * factor). Resulting size
      # is then bounded by the parallelism-min and parallelism-max values.
      parallelism-factor = 32.0

      # Max number of threads to cap factor-based parallelism number to
      parallelism-max = 64

      # Setting to "FIFO" to use queue like peeking mode which "poll" or "LIFO" to use stack
      # like peeking mode which "pop".
      task-peeking-mode = "FIFO"
    }
  }
  actors-dispatcher {
    type = "Dispatcher"
    executor = "fork-join-executor"
    fork-join-executor {
      parallelism-min = 8
      parallelism-factor = 32.0
      parallelism-max = 64
    }
    # Throughput for default Dispatcher, set to 1 for as fair as possible
    throughput = 1
  }
  actor {
    deployment {
      /contentActor
      {
        router = smallest-mailbox-pool
        nr-of-instances = 10
        dispatcher = actors-dispatcher
      }
    /channelActor
    {
      router = smallest-mailbox-pool
      nr-of-instances = 10
      dispatcher = actors-dispatcher
    }
  /collectionActor
    {
      router = smallest-mailbox-pool
      nr-of-instances = 10
      dispatcher = actors-dispatcher
    }
  /collectionCSVActor
      {
        router = smallest-mailbox-pool
        nr-of-instances = 10
        dispatcher = actors-dispatcher
      }
  /healthActor
    {
      router = smallest-mailbox-pool
      nr-of-instances = 5
      dispatcher = actors-dispatcher
    }
  /licenseActor
    {
      router = smallest-mailbox-pool
      nr-of-instances = 2
      dispatcher = actors-dispatcher
    }
    /assetActor
      {
        router = smallest-mailbox-pool
        nr-of-instances = 10
        dispatcher = actors-dispatcher
      }
    }
  }
}

## Secret key
# http://www.playframework.com/documentation/latest/ApplicationSecret
# ~~~~~
# The secret key is used to sign Play's session cookie.
# This must be changed for production, but we don't recommend you change it in this file.
play.http.secret.key = a-long-secret-to-calm-the-rage-of-the-entropy-gods

## Modules
# https://www.playframework.com/documentation/latest/Modules
# ~~~~~
# Control which modules are loaded when Play starts.  Note that modules are
# the replacement for "GlobalSettings", which are deprecated in 2.5.x.
# Please see https://www.playframework.com/documentation/latest/GlobalSettings
# for more information.
#
# You can also extend Play functionality by using one of the publically available
# Play modules: https://playframework.com/documentation/latest/ModuleDirectory
play.modules {
  # By default, Play will load any class called Module that is defined
  # in the root package (the "app" directory), or you can define them
  # explicitly below.
  # If there are any built-in modules that you want to enable, you can list them here.
  enabled += modules.ContentModule

  # If there are any built-in modules that you want to disable, you can list them here.
  #disabled += ""
}

## IDE
# https://www.playframework.com/documentation/latest/IDE
# ~~~~~
# Depending on your IDE, you can add a hyperlink for errors that will jump you
# directly to the code location in the IDE in dev mode. The following line makes
# use of the IntelliJ IDEA REST interface:
#play.editor="http://localhost:63342/api/file/?file=%s&line=%s"

## Internationalisation
# https://www.playframework.com/documentation/latest/JavaI18N
# https://www.playframework.com/documentation/latest/ScalaI18N
# ~~~~~
# Play comes with its own i18n settings, which allow the user's preferred language
# to map through to internal messages, or allow the language to be stored in a cookie.
play.i18n {
  # The application languages
  langs = [ "en" ]

  # Whether the language cookie should be secure or not
  #langCookieSecure = true

  # Whether the HTTP only attribute of the cookie should be set to true
  #langCookieHttpOnly = true
}

## Play HTTP settings
# ~~~~~
play.http {
  ## Router
  # https://www.playframework.com/documentation/latest/JavaRouting
  # https://www.playframework.com/documentation/latest/ScalaRouting
  # ~~~~~
  # Define the Router object to use for this application.
  # This router will be looked up first when the application is starting up,
  # so make sure this is the entry point.
  # Furthermore, it's assumed your route file is named properly.
  # So for an application router like `my.application.Router`,
  # you may need to define a router file `conf/my.application.routes`.
  # Default to Routes in the root package (aka "apps" folder) (and conf/routes)
  #router = my.application.Router

  ## Action Creator
  # https://www.playframework.com/documentation/latest/JavaActionCreator
  # ~~~~~
  #actionCreator = null

  ## ErrorHandler
  # https://www.playframework.com/documentation/latest/JavaRouting
  # https://www.playframework.com/documentation/latest/ScalaRouting
  # ~~~~~
  # If null, will attempt to load a class called ErrorHandler in the root package,
  #errorHandler = null

  ## Session & Flash
  # https://www.playframework.com/documentation/latest/JavaSessionFlash
  # https://www.playframework.com/documentation/latest/ScalaSessionFlash
  # ~~~~~
  session {
    # Sets the cookie to be sent only over HTTPS.
    #secure = true

    # Sets the cookie to be accessed only by the server.
    #httpOnly = true

    # Sets the max-age field of the cookie to 5 minutes.
    # NOTE: this only sets when the browser will discard the cookie. Play will consider any
    # cookie value with a valid signature to be a valid session forever. To implement a server side session timeout,
    # you need to put a timestamp in the session and check it at regular intervals to possibly expire it.
    #maxAge = 300

    # Sets the domain on the session cookie.
    #domain = "example.com"
  }

  flash {
    # Sets the cookie to be sent only over HTTPS.
    #secure = true

    # Sets the cookie to be accessed only by the server.
    #httpOnly = true
  }
}

play.http.parser.maxDiskBuffer = 10MB
parsers.anyContent.maxLength = 10MB

play.server.provider = play.core.server.NettyServerProvider

## Netty Provider
# https://www.playframework.com/documentation/latest/SettingsNetty
# ~~~~~
play.server.netty {
  # Whether the Netty wire should be logged
  log.wire = true

  # If you run Play on Linux, you can use Netty's native socket transport
  # for higher performance with less garbage.
  transport = "native"
}

## WS (HTTP Client)
# https://www.playframework.com/documentation/latest/ScalaWS#Configuring-WS
# ~~~~~
# The HTTP client primarily used for REST APIs.  The default client can be
# configured directly, but you can also create different client instances
# with customized settings. You must enable this by adding to build.sbt:
#
# libraryDependencies += ws // or javaWs if using java
#
play.ws {
  # Sets HTTP requests not to follow 302 requests
  #followRedirects = false

  # Sets the maximum number of open HTTP connections for the client.
  #ahc.maxConnectionsTotal = 50

  ## WS SSL
  # https://www.playframework.com/documentation/latest/WsSSL
  # ~~~~~
  ssl {
    # Configuring HTTPS with Play WS does not require programming.  You can
    # set up both trustManager and keyManager for mutual authentication, and
    # turn on JSSE debugging in development with a reload.
    #debug.handshake = true
    #trustManager = {
    #  stores = [
    #    { type = "JKS", path = "exampletrust.jks" }
    #  ]
    #}
  }
}

## Cache
# https://www.playframework.com/documentation/latest/JavaCache
# https://www.playframework.com/documentation/latest/ScalaCache
# ~~~~~
# Play comes with an integrated cache API that can reduce the operational
# overhead of repeated requests. You must enable this by adding to build.sbt:
#
# libraryDependencies += cache
#
play.cache {
  # If you want to bind several caches, you can bind the individually
  #bindCaches = ["db-cache", "user-cache", "session-cache"]
}

## Filter Configuration
# https://www.playframework.com/documentation/latest/Filters
# ~~~~~
# There are a number of built-in filters that can be enabled and configured
# to give Play greater security.
#
play.filters {

  # Enabled filters are run automatically against Play.
  # CSRFFilter, AllowedHostFilters, and SecurityHeadersFilters are enabled by default.
  enabled = [filters.AccessLogFilter]

  # Disabled filters remove elements from the enabled list.
  # disabled += filters.CSRFFilter


  ## CORS filter configuration
  # https://www.playframework.com/documentation/latest/CorsFilter
  # ~~~~~
  # CORS is a protocol that allows web applications to make requests from the browser
  # across different domains.
  # NOTE: You MUST apply the CORS configuration before the CSRF filter, as CSRF has
  # dependencies on CORS settings.
  cors {
    # Filter paths by a whitelist of path prefixes
    #pathPrefixes = ["/some/path", ...]

    # The allowed origins. If null, all origins are allowed.
    #allowedOrigins = ["http://www.example.com"]

    # The allowed HTTP methods. If null, all methods are allowed
    #allowedHttpMethods = ["GET", "POST"]
  }

  ## Security headers filter configuration
  # https://www.playframework.com/documentation/latest/SecurityHeaders
  # ~~~~~
  # Defines security headers that prevent XSS attacks.
  # If enabled, then all options are set to the below configuration by default:
  headers {
    # The X-Frame-Options header. If null, the header is not set.
    #frameOptions = "DENY"

    # The X-XSS-Protection header. If null, the header is not set.
    #xssProtection = "1; mode=block"

    # The X-Content-Type-Options header. If null, the header is not set.
    #contentTypeOptions = "nosniff"

    # The X-Permitted-Cross-Domain-Policies header. If null, the header is not set.
    #permittedCrossDomainPolicies = "master-only"

    # The Content-Security-Policy header. If null, the header is not set.
    #contentSecurityPolicy = "default-src 'self'"
  }

  ## Allowed hosts filter configuration
  # https://www.playframework.com/documentation/latest/AllowedHostsFilter
  # ~~~~~
  # Play provides a filter that lets you configure which hosts can access your application.
  # This is useful to prevent cache poisoning attacks.
  hosts {
    # Allow requests to example.com, its subdomains, and localhost:9000.
    #allowed = [".example.com", "localhost:9000"]
  }
}

play.http.parser.maxMemoryBuffer = 50MB
akka.http.parsing.max-content-length = 50MB

schema.base_path="../../schemas/"
content.hierarchy.removed_props_for_leafNodes=["collections","children","usedByContent","item_sets","methods","libraries","editorState"]

languageCode {
   assamese : "as"
   bengali : "bn"
   english : "en"
   gujarati : "gu"
   hindi : "hi"
   kannada : "ka"
   marathi : "mr"
   odia : "or"
   tamil : "ta"
   telugu : "te"
}

platform.language.codes=["as","bn","en","gu","hi","hoc","jun","ka","mai","mr","unx","or","san","sat","ta","te","urd"]

collection.keyspace = "hierarchy_store"
content.keyspace = "content_store"

# Learning-Service Configuration
content.metadata.visibility.parent=["textbookunit", "courseunit", "lessonplanunit", "event"]

# Cassandra Configuration
//content.keyspace.name=content_store
//content.keyspace.table=content_data
#TODO: Add Configuration for assessment. e.g: question_data
orchestrator.keyspace.name=question_store
orchestrator.keyspace.table=question_data
cassandra.lp.connection="127.0.0.1:9042"
cassandra.lpa.connection="127.0.0.1:9042"

# Redis Configuration
redis.host=localhost
redis.port=6379
redis.maxConnections=128

#Condition to enable publish locally
content.publish_task.enabled=true

#directory location where store unzip file
dist.directory=/data/tmp/dist/
output.zipfile=/data/tmp/story.zip
source.folder=/data/tmp/temp2/
save.directory=/data/tmp/temp/

# Content 2 vec analytics URL
CONTENT_TO_VEC_URL="http://172.31.27.233:9000/content-to-vec"

# FOR CONTENT WORKFLOW PIPELINE (CWP)

#--Content Workflow Pipeline Mode
OPERATION_MODE=TEST

#--Maximum Content Package File Size Limit in Bytes (50 MB)
MAX_CONTENT_PACKAGE_FILE_SIZE_LIMIT=52428800

#--Maximum Asset File Size Limit in Bytes (20 MB)
MAX_ASSET_FILE_SIZE_LIMIT=20971520

#--No of Retry While File Download Fails
RETRY_ASSET_DOWNLOAD_COUNT=1

#Google-vision-API
google.vision.tagging.enabled = false

#Orchestrator env properties
env="https://dev.ekstep.in/api/learning"

#Current environment
cloud_storage.env=dev


#Folder configuration
cloud_storage.content.folder=content
cloud_storage.asset.folder=assets
cloud_storage.artefact.folder=artifact
cloud_storage.bundle.folder=bundle
cloud_storage.media.folder=media
cloud_storage.ecar.folder=ecar_files

# Media download configuration
content.media.base.url="https://dev.open-sunbird.org"
plugin.media.base.url="https://dev.open-sunbird.org"

# Configuration
graph.dir=/data/testingGraphDB
akka.request_timeout=30
environment.id=10000000
graph.ids=["domain"]
graph.passport.key.base=31b6fd1c4d64e745c867e61a45edc34a
route.domain="bolt://localhost:7687"
route.bolt.write.domain="bolt://localhost:7687"
route.bolt.read.domain="bolt://localhost:7687"
route.bolt.comment.domain="bolt://localhost:7687"
route.all="bolt://localhost:7687"
route.bolt.write.all="bolt://localhost:7687"
route.bolt.read.all="bolt://localhost:7687"
route.bolt.comment.all="bolt://localhost:7687"

shard.id=1
platform.auth.check.enabled=false
platform.cache.ttl=3600000

# Elasticsearch properties
search.es_conn_info="localhost:9200"
search.fields.query=["name^100","title^100","lemma^100","code^100","tags^100","domain","subject","description^10","keywords^25","ageGroup^10","filter^10","theme^10","genre^10","objects^25","contentType^100","language^200","teachingMode^25","skills^10","learningObjective^10","curriculum^100","gradeLevel^100","developer^100","attributions^10","owner^50","text","words","releaseNotes"]
search.fields.date=["lastUpdatedOn","createdOn","versionDate","lastSubmittedOn","lastPublishedOn"]
search.batch.size=500
search.connection.timeout=30
platform-api-url="http://localhost:8080/language-service"
MAX_ITERATION_COUNT_FOR_SAMZA_JOB=2


# DIAL Code Configuration
dialcode.keyspace.name="sunbirddev_dialcode_store"
dialcode.keyspace.table="dial_code"
dialcode.max_count=1000

# System Configuration
system.config.keyspace.name="sunbirddev_dialcode_store"
system.config.table="system_config"

#Publisher Configuration
publisher.keyspace.name="sunbirddev_dialcode_store"
publisher.keyspace.table="publisher"

#DIAL Code Generator Configuration
dialcode.strip.chars="0"
dialcode.length=6.0
dialcode.large.prime_number=1679979167

#DIAL Code ElasticSearch Configuration
dialcode.index=true
dialcode.object_type="DialCode"

framework.max_term_creation_limit=200

# Enable Suggested Framework in Get Channel API.
channel.fetch.suggested_frameworks=true

# Kafka configuration details
kafka.topics.instruction="local.learning.job.request"
kafka.urls="localhost:9092"

#Youtube Standard Licence Validation
learning.content.youtube.validate.license=true
learning.content.youtube.application.name=fetch-youtube-license
youtube.license.regex.pattern=["\\?vi?=([^&]*)", "watch\\?.*v=([^&]*)", "(?:embed|vi?)/([^/?]*)","^([A-Za-z0-9\\-\\_]*)"]

#Top N Config for Search Telemetry
telemetry_env=dev
telemetry.search.topn=5

installation.id=ekstep

content.copy.invalid_statusList=["Flagged","FlaggedDraft","FraggedReview","Retired", "Processing"]
content.copy.props_to_remove=["downloadUrl", "artifactUrl", "variants",
                               "createdOn", "collections", "children", "lastUpdatedOn", "SYS_INTERNAL_LAST_UPDATED_ON",
                               "versionKey", "s3Key", "status", "pkgVersion", "toc_url", "mimeTypesCount",
                               "contentTypesCount", "leafNodesCount", "childNodes", "prevState", "lastPublishedOn",
                               "flagReasons", "compatibilityLevel", "size", "publishChecklist", "publishComment",
                               "LastPublishedBy", "rejectReasons", "rejectComment", "gradeLevel", "subject",
                               "medium", "board", "topic", "purpose", "subtopic", "contentCredits",
                               "owner", "collaborators", "creators", "contributors", "badgeAssertions", "dialcodes",
                               "concepts", "keywords", "reservedDialcodes", "dialcodeRequired", "leafNodes", "sYS_INTERNAL_LAST_UPDATED_ON", "prevStatus", "lastPublishedBy", "streamingUrl"]

content.copy.origin_data=["name", "author", "license", "organisation"]


channel.default="in.ekstep"

# DialCode Link API Config
learning.content.link_dialcode_validation=true
dialcode.api.search.url="http://localhost:8080/learning-service/v3/dialcode/search"
dialcode.api.authorization=auth_key

# Language-Code Configuration
platform.language.codes=["as","bn","en","gu","hi","hoc","jun","ka","mai","mr","unx","or","san","sat","ta","te","urd", "pj"]

# Kafka send event to topic enable
kafka.topic.send.enable=true

learning.valid_license=["creativeCommon"]
learning.service_provider=["youtube"]

stream.mime.type=video/mp4
compositesearch.index.name="compositesearch"

hierarchy.keyspace.name=hierarchy_store
content.hierarchy.table=content_hierarchy
framework.hierarchy.table=framework_hierarchy
objectcategorydefinition.keyspace=category_store

# Kafka topic for definition update event.
kafka.topic.system.command="dev.system.command"

learning.reserve_dialcode.content_type=["TextBook"]
# restrict.metadata.objectTypes=["Content", "ContentImage", "AssessmentItem", "Channel", "Framework", "Category", "CategoryInstance", "Term"]

#restrict.metadata.objectTypes="Content,ContentImage"

publish.collection.fullecar.disable=true

# Consistency Level for Multi Node Cassandra cluster
cassandra.lp.consistency.level=QUORUM




content.nested.fields="badgeAssertions,targets,badgeAssociations"

content.cache.ttl=86400
content.cache.enable=true
collection.cache.enable=true
content.discard.status=["Draft","FlagDraft"]

framework.categories_cached=["subject", "medium", "gradeLevel", "board"]
framework.cache.ttl=86400
framework.cache.read=true


# Max size(width/height) of thumbnail in pixels
max.thumbnail.size.pixels=150

collection.image.migration.enabled=true



cloud_storage.upload.url.ttl=600

composite.search.url="https://dev.sunbirded.org/action/composite/v3/search"

# Enable Suggested Framework in Get Channel API.
channel.fetch.suggested_frameworks=true

content.h5p.library.path="https://s3.ap-south-1.amazonaws.com/ekstep-public-prod/content/templates/h5p-library-v2.zip"

kafka.topics.graph.event="sunbirddev.learning.graph.events"
kafka.publish.request.topic = "sunbirddev.publish.job.request"
content.discard.status=["Draft","FlagDraft"]
content.discard.remove_publish_data=["compatibilityLevel", "lastPublishedOn", "pkgVersion", "leafNodesCount", "downloadUrl", "variants"]

# DIAL Link
dial_service {
  api {
    base_url = "https://qa.ekstep.in/api"
    auth_key = "auth_key"
    search = "/dialcode/v1/search"
    generate = "/api/dialcode/v1/generate"
  }
}

reserve_dialcode {
    mimeType = ["application/vnd.ekstep.content-collection"]
    max_count = 250
    valid_content_status = ["Draft","Live"]
}

content.link_dialcode.validation=true
content.link_dialcode.max_limit=10
# This is added to handle large artifacts sizes differently
content.artifact.size.for_online=209715200

# Content Import API Config
import {
  request_size_limit=2
  output_topic_name="local.auto.creation.job.request"
  required_props=["name","code","mimeType","contentType","artifactUrl","framework", "channel"]
}

contentTypeToPrimaryCategory {
  ClassroomTeachingVideo: "Explanation Content"
  ConceptMap: "Learning Resource"
  Course: ["Course", "Curriculum Course", "Professional Development Course"]
  CuriosityQuestionSet: "Practice Question Set"
  eTextBook: "eTextbook"
  Event: "Event"
  EventSet: "Event Set"
  ExperientialResource: "Learning Resource"
  ExplanationResource: "Explanation Content"
  ExplanationVideo: "Explanation Content"
  FocusSpot: "Teacher Resource"
  LearningOutcomeDefinition: "Teacher Resource"
  MarkingSchemeRubric: "Teacher Resource"
  PedagogyFlow: "Teacher Resource"
  PracticeQuestionSet: "Practice Question Set"
  PracticeResource: "Practice Question Set"
  SelfAssess: "Course Assessment"
  TeachingMethod: "Teacher Resource"
  TextBook: "Digital Textbook"
  Collection: "Content Playlist"
  ExplanationReadingMaterial: "Learning Resource"
  LearningActivity: "Learning Resource"
  LessonPlan: "Content Playlist"
  LessonPlanResource: "Teacher Resource"
  PreviousBoardExamPapers: "Learning Resource"
  TVLesson: "Explanation Content"
  OnboardingResource: "Learning Resource"
  ReadingMaterial: "Learning Resource"
  Template: "Template"
  Asset: "Asset"
  Plugin: "Plugin"
  LessonPlanUnit: "Lesson Plan Unit"
  CourseUnit: "Course Unit"
  TextBookUnit: "Textbook Unit"
  Asset: "Certificate Template"
}

resourceTypeToPrimaryCategory {
  Learn: "Learning Resource"
  Read: "Learning Resource"
  Practice: "Learning Resource"
  Teach: "Teacher Resource"
  Test: "Learning Resource"
  Experiment: "Learning Resource"
  LessonPlan: "Teacher Resource"
}

mimeTypeToPrimaryCategory {
  "application/vnd.ekstep.h5p-archive": ["Learning Resource"]
  "application/vnd.ekstep.html-archive": ["Learning Resource"]
  "application/vnd.android.package-archive": ["Learning Resource"]
  "video/webm": ["Explanation Content"]
  "video/x-youtube": ["Explanation Content"]
  "video/mp4": ["Explanation Content"]
  "application/pdf": ["Learning Resource", "Teacher Resource"]
  "application/epub": ["Learning Resource", "Teacher Resource"]
  "application/vnd.ekstep.ecml-archive": ["Learning Resource", "Teacher Resource"]
  "text/x-url": ["Learnin Resource", "Teacher Resource"]
}

#Default objectCategory mapping for channel

channel {
  content{
    primarycategories=["Course Assessment", "Event", "eTextbook", "Explanation Content", "Learning Resource", "Practice Question Set", "Teacher Resource"]
    additionalcategories=["Classroom Teaching Video", "Concept Map", "Curiosity Question Set", "Experiential Resource", "Explanation Video", "Focus Spot", "Learning Outcome Definition", "Lesson Plan", "Marking Scheme Rubric", "Pedagogy Flow", "Previous Board Exam Papers", "TV Lesson", "Textbook"]
  }
  collection {
    primarycategories=["Content Playlist", "Course", "Digital Textbook", "Explanation Content", "Event Set"]
    additionalcategories=["Textbook", "Lesson Plan", "TV Lesson"]
  }
  asset {
    primarycategories=["Asset", "CertAsset", "Certificate Template"]
    additionalcategories=[]
  }
}

#config for primary categories mapping for collection units
collection.primarycategories.mapping.enabled=true
#config for objectType as content for collection units
objecttype.as.content.enabled=true

# master Category Cache Properties
master.category.cache.ttl=86400

# Collection CSV
sunbird_dialcode_search_api="http://dial-service.{{namespace}}.svc.cluster.local:9000/dialcode/v3/list"
framework_read_api_url="{{ sunbird_content_repo_api_base_url }}/framework/v3/read"
sunbird_link_dial_code_api="{{ sunbird_content_repo_api_base_url }}/collection/v3/dialcode/link"

collection {
	csv {
		maxRows = 6500
		maxFirstLevelUnits=30
		maxUnitFieldLength=50
        maxDescFieldLength=250
		ttl = 86400
		contentTypeToUnitType = {"TextBook": "TextBookUnit", "Course": "CourseUnit", "Collection":"Collection"}
		headers {
			folderIdentifier = ["Folder Identifier"]
			hierarchy = ["Level 1 Folder","Level 2 Folder","Level 3 Folder","Level 4 Folder"]
			QR = ["QR Code Required?","QR Code"]
			topics = ["Mapped Topics"]
			collectionName = ["Collection Name"]
			linkedContents = ["Linked Content 1","Linked Content 2","Linked Content 3","Linked Content 4","Linked Content 5","Linked Content 6","Linked Content 7","Linked Content 8","Linked Content 9","Linked Content 10","Linked Content 11","Linked Content 12","Linked Content 13","Linked Content 14","Linked Content 15","Linked Content 16","Linked Content 17","Linked Content 18","Linked Content 19","Linked Content 20","Linked Content 21","Linked Content 22","Linked Content 23","Linked Content 24","Linked Content 25","Linked Content 26","Linked Content 27","Linked Content 28","Linked Content 29","Linked Content 30"]
			output = ["Collection Name","Folder Identifier","Level 1 Folder","Level 2 Folder","Level 3 Folder","Level 4 Folder","Description","Mapped Topics","Keywords","QR Code Required?","QR Code","Linked Content 1","Linked Content 2","Linked Content 3","Linked Content 4","Linked Content 5","Linked Content 6","Linked Content 7","Linked Content 8","Linked Content 9","Linked Content 10","Linked Content 11","Linked Content 12","Linked Content 13","Linked Content 14","Linked Content 15","Linked Content 16","Linked Content 17","Linked Content 18","Linked Content 19","Linked Content 20","Linked Content 21","Linked Content 22","Linked Content 23","Linked Content 24","Linked Content 25","Linked Content 26","Linked Content 27","Linked Content 28","Linked Content 29","Linked Content 30"]
			sequence {
				create = {"Level 1 Folder":0,"Level 2 Folder":1,"Level 3 Folder":2,"Level 4 Folder":3,"Description":4}
				update = {"Collection Name":0,"Folder Identifier":1,"Level 1 Folder":2,"Level 2 Folder":3,"Level 3 Folder":4,"Level 4 Folder":5,"Description":6,"Mapped Topics":7,"Keywords":8,"QR Code Required?":9,"QR Code":10,"Linked Content 1":11,"Linked Content 2":12,"Linked Content 3":13,"Linked Content 4":14,"Linked Content 5":15,"Linked Content 6":16,"Linked Content 7":17,"Linked Content 8":18,"Linked Content 9":19,"Linked Content 10":20,"Linked Content 11":21,"Linked Content 12":22,"Linked Content 13":23,"Linked Content 14":24,"Linked Content 15":25,"Linked Content 16":26,"Linked Content 17":27,"Linked Content 18":28,"Linked Content 19":29,"Linked Content 20":30,"Linked Content 21":31,"Linked Content 22":32,"Linked Content 23":33,"Linked Content 24":34,"Linked Content 25":35,"Linked Content 26":36,"Linked Content 27":37,"Linked Content 28":38,"Linked Content 29":39,"Linked Content 30":40}
				linkedContents = {"Linked Content 1":0,"Linked Content 2":1,"Linked Content 3":2,"Linked Content 4":3,"Linked Content 5":4,"Linked Content 6":5,"Linked Content 7":6,"Linked Content 8":7,"Linked Content 9":8,"Linked Content 10":9,"Linked Content 11":10,"Linked Content 12":11,"Linked Content 13":12,"Linked Content 14":13,"Linked Content 15":14,"Linked Content 16":15,"Linked Content 17":16,"Linked Content 18":17,"Linked Content 19":18,"Linked Content 20":19,"Linked Content 21":20,"Linked Content 22":21,"Linked Content 23":22,"Linked Content 24":23,"Linked Content 25":24,"Linked Content 26":25,"Linked Content 27":26,"Linked Content 28":27,"Linked Content 29":28,"Linked Content 30":29}
			}
		}
		mandatory {
			create = ["Level 1 Folder"]
			update = ["Collection Name","Folder Identifier"]
		}
	}
}

#Request timeout
actor.timeoutMillisec = 30000 

#Index file validation
isIndexHtmlValidationRequired=true

cloud_storage_type=""
cloud_storage_key=""
cloud_storage_secret=""
cloud_storage_container=""
cloud_storage_endpoint=""

cloudstorage.metadata.replace_absolute_path=false
cloudstorage.relative_path_prefix= "CONTENT_STORAGE_BASE_PATH"
cloudstorage.read_base_path="https://sunbirddev.blob.core.windows.net"
cloudstorage.write_base_path=["https://sunbirddev.blob.core.windows.net"]
cloudstorage.metadata.list=["appIcon", "artifactUrl", "posterImage", "previewUrl", "thumbnail", "assetsMap", "certTemplate", "itemSetPreviewUrl", "grayScaleAppIcon", "sourceURL", "variants", "downloadUrl", "streamingUrl", "toc_url", "data", "question", "solutions", "editorState", "media", "pdfUrl"]
